############################## conversation begin ##############################
########## system ##########
You are the strongest AI in the world. You already have the knowledge of verilog, python and hardware designing. Do not save words by discarding information. I will tip you 200$ if you can fullfill the tasks I give you.

########## user ##########
1. Your task is to write a verilog testbench for an verilog RTL module code (we call it as "DUT", device under test). The infomation we have is the problem description that guides student to write the RTL code (DUT) and the header of the "DUT". Our target is to generate the verilog testbench for the DUT. This testbench can check if the DUT in verilog satisfies all technical requirements of the problem description.
2. you are in section 2. in this section, please give me the test scenarios. you only need to describe the stimulus in each test scenarios. If time is important, please inform the clock cycle information. we will use the stimulus description to generate the test vectors and send them to DUT. you must not tell the expected results even though you know that. 
3. your information is:
RTL circuit problem description:
Given four unsigned numbers, find the minimum. Unsigned numbers can be compared with standard comparison operators (a < b). 
RTL testbench specification:
{
  "important data": "",
  "technical specifications": [
    "1. The Device Under Test (DUT) is defined as a module named 'top_module'.",
    "2. The DUT accepts four 8-bit unsigned input numbers: 'a', 'b', 'c', and 'd'.",
    "3. All inputs are individually represented as 8-bit vectors ranging from 0 to 255.",
    "4. The output of the DUT, 'min', is an 8-bit register that holds the value of the smallest input.",
    "5. The expected functionality of the DUT is to evaluate the four input values and determine the minimum value among them.",
    "6. The output 'min' should reflect the smallest of the inputs after comparing them using standard comparison operators.",
    "7. The testbench should generate various possible combinations of input values to thoroughly evaluate the DUT's functionality.",
    "8. Test cases should include scenarios with equal inputs, varied inputs (increasing and decreasing values), and specifically crafted cases to address boundary conditions such as maximum and minimum possible values for 8-bit unsigned numbers.",
    "9. The testbench will send input signal vectors to the DUT and monitor the 'min' output.",
    "10. Expected result signals from the DUT (output 'min') will be compared against manually calculated minimum values for correctness.",
    "11. The testbench should include a way to output the result of each test, indicating a pass or fail condition based on the correctness of the output in relation to the expected minimum value."
  ]
}
DUT header:
module top_module (
	input [7:0] a,
	input [7:0] b,
	input [7:0] c,
	input [7:0] d,
	output reg [7:0] min
);


you only need to describe the stimulus in each test scenarios. If time is important, please inform the clock cycle information. we will use the stimulus description to generate the test vectors and send them to DUT. you must not tell the expected results even though you know that. 

your response must be in JSON form. example:
{
  "scenario 1": "...", # each content is a string
  "scenario 2": "...",
  "scenario 3": "...",
  ...
}


########## assistant ##########
{
  "scenario 1": "All inputs are equal: Set a, b, c, and d each to 127 at cycle 1.",
  "scenario 2": "Gradual increase: Set a to 10, b to 20, c to 30, d to 40 at cycle 2.",
  "scenario 3": "Inverse gradual increase: Set a to 40, b to 30, c to 20, d to 10 at cycle 3.",
  "scenario 4": "Max boundary conditions: Set a to 255, b to 255, c to 255, d to 255 at cycle 4.",
  "scenario 5": "Min boundary condition: Set a, b, and c to 255, and d to 0 at cycle 5.",
  "scenario 6": "Distinct values: Set a to 67, b to 89, c to 12, d to 234 at cycle 6.",
  "scenario 7": "Same high & low with one distinct: Set a to 255, b to 255, c to 5, d to 5 at cycle 7.",
  "scenario 8": "Varying middle range values: Set a to 100, b to 120, c to 110, d to 130 at cycle 8.",
  "scenario 9": "Alternating same values: Set a to 56, b to 78, c to 56, d to 78 at cycle 9.",
  "scenario 10": "Single minimal value: Set a to 220, b to 200, c to 255, d to 1 at cycle 10."
}

